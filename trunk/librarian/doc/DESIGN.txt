DESIGN
======


Use cases
---------

* Log In
* Log Out
* Manage Users (admin)
  * List Users
  * Add User
  * Edit User    
  * Delete User
* Manage Document Types (admin)
  * List Document Types
  * Add Document Type
  * Edit Document Type
  * Delete Document Type
* List Documents
  * List Owned Documents
  * List Favorite Documents
  * List Recent Documents
* Find Documents
  * Find Document by ID
  * Find Documents by Title
  * Find Documents by Owner
  * Find Documents by Group
  * Find Documents by Author
* View Document Details
  * List Document Versions
* Download Document Version
* Check Out Document Version
* Check In Document Version
* Change Document Version Status
* Discard Document Version (only Draft or For Review) 


Classes
-------

class Document {
    long getId()
    DocumentType getType()
    String getTitle()
    User getOwner()
    Group getGroup()
    List<DocumentVersion> getVersions()
    DocumentVersion getVersion(int versionNumber)
    void addVersion(DocumentVersion version)
}

class DocumentType {
    long getId()
    String getCode()  // e.g. "SRD"
    String getName()  // e.g. "Software Requirements Document"
}

class DocumentVersion {
    long getId()
    int getVersionNumber()
    DocumentStatus getDocumentStatus()
    User getAuthor()
    boolean isCheckedOut()
    void setCheckedOut(boolean isCheckedOut)
    Date getCreationDate()
    Date getModifiedDate()
    InputStream getContent()
    void setContent(InputStream is)
    void promoteStatus()
}

enum DocumentStatus {
    DRAFT
    FOR_REVIEW
    FINAL
    OBSOLETE
}

class User {
    long getId()
    String getUsername()
    String getPassword()
    String getFullName()
    String getEmail()
    String getGroup()
    UserRole getRole()
}

class Group {
    long getId()
    String getName()
    User getManager()
}

enum UserRole {
    USER
    MANAGER
    ADMIN
}
