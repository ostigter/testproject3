OzMUD - Design
==============


class World {
    -rooms : Map<Integer, Room>
    -players : Map<String, Player>
}

abstract class MudObject {
    -shortName : String
    -fullName : String
    -aliasses : String[]
    -description : String
    + boolean matches(String name)

class Room : MudObject {
    -id : int
    -exits : List<String, Exit>
    -items : List<Item>
    -creatures : List<Creature>
}

class Exit : MudObject {
    -roomId : int
}

abstract class Creature : MudObject
    -race : Race
    -gender : Gender
    -level : int
    -alignment : int
    -strength : int
    -dexterity : int
    -endurance : int
    -intelligence : int
    -wisdom : int
    -hitPoints : int
    -inventory : Set<Item>
    -carriedItems : Set<Item>
    -equipment : Map<EquipmentSlot, WornItem>
    -cashMoney : int
    -bankMoney : int
    -opponent : Creature
    -enemies : Set<Creature>
    +getMaxHitPoints() : int
    +getEncumberance() : double
    +getMaxEncumberance() : double

enum Gender {
    MALE
    FEMALE
    NEUTRAL
}

class Race {
    - noun       # e.g. Elf
    - adjective  # e.g. Elven
    - minStrength
    - maxStrength
    - minDexterity
    - maxDexterity
    - minEndurance
    - maxEndurance
    - minIntelligence
    - maxIntelligence
    - minWisdom
    - maxWisdom
    - expirienceRate
}

Races:
    Human   (human)
    Elf     (elven)
    Dwarf   (dwarven)
    Orc     (orcish)

enum EquipmentSlot {
    -name : String
    -form : String
    HEAD("head", "on")
    NECK("neck", "around")
    BODY("body", "on")
    ARMS("arms", "on")
    HANDS("hands", "on")
    RING_RIGHT("right ring", "as")
    RING_LEFT("left ring", "as")
    BELT("waist", "around")
    LEGS("legs", "on")
    FEET("feet", "on")
    SHIELD("shield", "as")
    WEAPON("weapon", "as")
}

class NPC : Creature {
    -isAggressive : boolean
    -doesFollow : boolean
}

class Player : Creature {
    -password : String
    -colorsEnabled : boolean
    -connectionState : ConnectionState
    -isResting : boolean
}

enum PlayerState {
    NORMAL
    IDLE
    RESTING
    KNOCKED_DOWN
    STUNNED
    DEAD
}

Levels/Titels:
1000  Admin
 900  Arch-Wizard
 800  Elder
 700  Wizard
 600  Creator
 500  Apprentice
 200  Hero/Heroin
 100  Legend
  75  Champion
  50  Lord/Lady
   1  Adventurer/Adventuress

enum ConnectionState {
    OFFLINE
    ONLINE
    LINKDEAD
}

class Item : MudObject {
    - weight : double
    - value : int
}

class Weapon : Item {
    - type : WeaponType
    - twoHanded : boolean
    - damage : int
    - endurance : int
}

enum WeaponType {
    DAGGER
    SWORD
    AXE
    BLUNT
    SPEAR
    - damageType : DamageType
}

enum DamageType {
    PIERCING
    SLASHING
    CRUSHING
}

class Armour : Item
    - type : ArmourType
    - protection : int
    - endurance : int
}

class Skill {
    - name
    - cost
}
