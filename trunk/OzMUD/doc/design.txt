OzMUD - Design
==============


Classes
-------

class World {
    -rooms : Map<Integer, Room>
    -players : Map<String, Player>
}

abstract class MudObject {
    -shortName : String
    -fullName : String
    -aliasses : String[]
    -description : String
    + boolean matches(String name)

class Room : MudObject {
    -id : int
    -exits : List<String, Exit>
    -items : List<Item>
    -creatures : List<Creature>
}

class Exit : MudObject {
    -roomId : int
}

class Item : MudObject {
    - weight : double
    - value : int
}

class Equipment : Item {
    -equipmentSlot : EquipmentSlot
    -maximumHitPoints : int
    -hitPoints : int
}

class Armour : Equipment {
    -armourValue : int
}

class Weapon : Equipment {
    -type : WeaponType
    -isTwoHanded : boolean
    -damage : int
}

enum WeaponType {
    DAGGER
    SWORD
    AXE
    BLUNT
    SPEAR
    -damageType : DamageType
}

enum DamageType {
    PIERCING
    SLASHING
    CRUSHING
}

enum EquipmentSlot {
    -name : String
    -form : String
    HEAD("head", "on")
    NECK("neck", "around")
    BODY("body", "on")
    ARMS("arms", "on")
    HANDS("hands", "on")
    RING_RIGHT("right ring", "as")
    RING_LEFT("left ring", "as")
    BELT("waist", "around")
    LEGS("legs", "on")
    FEET("feet", "on")
    SHIELD("shield", "as")
    WEAPON("weapon", "as")
}

abstract class Creature : MudObject
    -race : Race
    -gender : Gender
    -level : int
    -alignment : int
    -strength : int
    -dexterity : int
    -endurance : int
    -intelligence : int
    -wisdom : int
    -hitpoints : int
    -inventory : Set<Item>
    -carriedItems : Set<Item>
    -equipment : Map<EquipmentSlot, WornItem>
    -cashMoney : int
    -bankMoney : int
    -opponent : Creature
    -enemies : Set<Creature>
    +getMaximumHitpoints() : int
    +getEncumberance() : double
    +getMaxEncumberance() : double

enum Gender {
    MALE
    FEMALE
    NEUTRAL
}

class Race {
    -noun       # e.g. Elf
    -adjective  # e.g. Elven
    -minStrength
    -maxStrength
    -minDexterity
    -maxDexterity
    -minEndurance
    -maxEndurance
    -minIntelligence
    -maxIntelligence
    -minWisdom
    -maxWisdom
    -experienceRate
}

Races:
    Human   (human)
    Elf     (elven)
    Dwarf   (dwarven)
    Orc     (orcish)

class NPC : Creature {
    -isAggressive : boolean
    -doesFollow : boolean
}

class Player : Creature {
    -password : String
    -colorsEnabled : boolean
    -connectionState : ConnectionState
    -isResting : boolean
}

enum PlayerState {
    NORMAL
    IDLE
    RESTING
    KNOCKED_DOWN
    STUNNED
    DEAD
}

Levels/Titels:
1000  Admin
 900  Arch-Wizard
 800  Elder
 700  Wizard
 600  Creator
 500  Apprentice
 200  Hero/Heroin
 100  Legend
  75  Champion
  50  Lord/Lady
   1  Adventurer/Adventuress

enum PlayerState {
    OFFLINE
    ONLINE
    IDLE
    RESTING
    KNOCKED_DOWN
    STUNNED
    DEAD
    LINKDEAD
}

class Skill {
    -name
    -cost
}


Combat calculations
-------------------

change_to_hit = {Skill, Dexterity, Weight}

Damage = {Weapon, Skill, Strength}

Player (A):
  str:      20
  dex:      20
  Sword:     0
  weapon:   50 (shortsword)
  Weight:   5.0

Rabbit (B):
  str:        5
  dex:       30
  Unarmed:  100
  weapon:     5 (teeth)
  Weight:   0.1

Player attacks Rabbit.

change_to_hit = DEXa / (DEXa + DEXb)
              = 20 / (20 + 30) = 20 / 50 = 40 %

       damage = (((Skill + Strength) / 2) / 100) * Weapon
              = (((0 + 20) / 2) / 100) * 50 = (10 / 100) * 50 = 5

Player (A):
  str:      100
  dex:      100
  Sword:      0
  weapon:    50 (shortsword)

change_to_hit = DEXa / (DEXa + DEXb)
              = 100 / (100 + 30) = 100 / 130 = 77 %

       damage = (((Skill + Strength) / 2) / 100) * Weapon
              = (((0 + 100) / 2) / 100) * 50 = (50 / 100) * 50 = 25

Player (A):
  str:      150
  dex:      100
  Sword:    100
  weapon:    50 (shortsword)

change_to_hit = DEXa / (DEXa + DEXb)
              = 100 / (100 + 30) = 100 / 130 = 77 %

       damage = (((Skill + Strength) / 2) / 100) * Weapon
              = (((100 + 150) / 2) / 100) * 50 = (125 / 100) * 50 = 62

Player (A):
  str:      200
  dex:      200
  Sword:    100
  weapon:    50 (shortsword)

change_to_hit = DEXa / (DEXa + DEXb)
              = 200 / (200 + 30) = 200 / 230 = 87 %

       damage = (((Skill + Strength) / 2) / 100) * Weapon
              = (((100 + 200) / 2) / 100) * 50 = (150 / 100) * 50 = 75


Weapons
-------

Piercing
  Dagger
  Spear
Slashing
  Sword
    Shortsword
    Rapier
    Sable
    Longsword
    Scimitar
    Katana
    Broadsword
    Bastardsword (2h)
    Dai-Katana (2h)
  Axe
    Hand Axe
    War Axe
    Battle Axe
Crushing
  Mace
    Wooden stick
    Bone
    Club
    Mace
  Hammer
    Warhammer


    Iron dagger
      damage: 5
      weight: 1.0
    Steel dagger
      damage: 10
      weight: 1.0
    Silver dagger
      damage: 15
      weight: 0.5
    Elven dagger
      damage: 20
      weight: 0.5
    Dwarven dagger
      damage: 25
      weight: 2.0
    Orcish dagger
      damage: 30
      weight: 1.0


    Iron shortsword
      damage: 10
      weight: 5.0
    Steel shortsword
      damage: 15
      weight: 5.0
    Silver shortsword
      damage: 20
      weight: 2.5
    Elven shortsword
      damage: 25
      weight: 2.5
    Dwarven shortsword
      damage: 30
      weight: 10.0
    Orcish shortsword
      damage: 35
      weight: 15.0
